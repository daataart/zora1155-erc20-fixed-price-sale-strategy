- two erc20s, one for each tokenid in the same 1155 contract
if i create a zora1155 (address), can i 
set up a sale using one erc20 on address/[1]
and set up another sale using a second erc20 (say USDC) on address/[2]
and when other users buy address/[1] or address/[2], they get deducted the correct erc20 [DONE]
two erc20s, one for a address[1]/[1] and one for address[2]/[1] two different 1155 contracts [DONE]
test funds recipient for mulitple sales, across multiple 1155 contracts and tokenIds [DONE]
alice's balance is increased by token price multiplied by number minted (minus zora fee?) [DONE]
Check for overflow... [DONE]
bob's balance is reduced by token price multiplied by number minted [DONE]
test_ResetSale [DONE]
test that the zora fee is deducted correctly for ETH sales[DONE]
i can set the limit per address to 0 on the eth side, stopping mints for eth, but still allowing mints for erc20s [DONE first test]
test that zero address as fundsRecipient causes a revert [DONE]
test that the zora fee is deducted correctly for $WISDOM sales [DONE]
test specifically for buying on a strat with no active config [DONE] 
and vice versa [DONE]
test multiple contract owners using the same strategy  





test_MintedPerRecipientGetter
test_fixedPriceSaleSupportsInterface



For wrapper contract
====================

All the tests above ^^ and any existing tests, plus:

(i.e. try with those two being different) -- The caller is the person calling mint, they should always be the one transferring the ERC20

Test that the wrapper doesn't work for a token contract it's not an admin of

Only a sales or admin should be able to set sale and reset sale (need to test the happy and the unhappy paths)

Tests for all events emitted in all functions
Tests for contractName, contractUri, contractVersion


